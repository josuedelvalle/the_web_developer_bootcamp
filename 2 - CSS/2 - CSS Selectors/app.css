/* 
Universal selector:
- Selects all elements on the page
- It is not commonly used
- Syntax: *
- Example: * { margin: 0; padding: 0; }

Element selector:
- Selects all elements of a specific type
- For example, all <h1> elements; p; img; etc.

Selector list:
- Selects all elements that match any of the selectors in the list
- Syntax: selector1, selector2, selector3
- We can use the comma to select multiple elements
- Example: h1, h2, h3 { color: red; }
*/

/* 
ID Selector:
- ID is a unique identifier for an element.
- It is used in HTML to identify an element, and we can use it in CSS to style that element.
- Keep them to a minimum, and use them only when necessary. There are more strategies and approaches to styling elements.

- Selects an element with a specific ID
- Syntax: #id
- Example: #main { color: red; }
*/

/*
Class Selector:
- Selects all elements with a specific class attribute
- By defining a class, you can apply the same style to multiple elements.

- We can use the class attribute to apply the same style to multiple elements
- You will have group of things/elements that you want to style in the same way. You can use the class attribute to apply the same style to multiple elements.

- The difference between ID and class is that an ID can only be used once in a document, while a class can be used multiple times.
- You will use classes more often than IDs. But both are important.

- Syntax: .class
- Example: .main { color: red; }

REMEMBER --> ID with '#' and class with '.'
*/

/*
Descendant Selector:
- Selects an element that is a descendant of another element
- Syntax: selector1 selector2
- Example: div p { color: red; } - selects all <p> elements inside a <div> element
*/

/*
Adjacent Selector:
- Selects an element that is directly adjacent to another element
- Syntax: selector1 + selector2
- Example: h2 + p { color: red; } - selects the first <p> element that is placed immediately after an <h2> element

Direct Child Selector:
- Selects an element that is a direct child of another element
- Syntax: selector1 > selector2
- Example: div > p { color: red; } - selects all <p> elements that are direct children of a <div> element
*/

/*
Attribute Selector:
- Selects an element based on its attribute
- Example of attributes: href, src, alt, title, type, class, id, etc.

- We can select elements with a specific value for an attribute
- Syntax: [attribute="value"]
- Example: [type="text"] { color: red; } - selects all elements with a type attribute equal to "text"

- We can also select elements with an attribute containing a specific value
- Syntax: [attribute*="value"]
- Example: [href*="google"] { color: red; } - selects all elements with an href attribute containing "google"

- We can also select elements with an attribute starting with a specific value
- Syntax: [attribute^="value"]
- Example: [href^="https"] { color: red; } - selects all elements with an href attribute starting with "https"

- We can also select elements with an attribute ending with a specific value
- Syntax: [attribute$="value"]
- Example: [href$=".com"] { color: red; } - selects all elements with an href attribute ending with ".com"
*/

/*
Pseudo-class Selector:
- Keyword added to a selector that specifies a special state of the selected element(s)
- Syntax: selector:pseudo-class
- Example: :active, :checked, :first, :first-child, :hover, :not(), :nth-child(), :nth-of-type(), :visited, ...

- :hover - selects an element when you mouse over it
    Have a different style when you hover over it, for example, change the color of the text 

- :active - selects an element when it is being activated by the user
    When you click on a button (but you haven't released the mouse yet), 
    the button will have a different style

- :checked - selects an input element that is checked
    When you check a checkbox, the style of the checkbox will change

- :nth-of-type() - helps us to select elements based on their position in a parent element
    Syntax: :nth-of-type(n)
    Example: p:nth-of-type(2) { color: red; } - selects the second <p> element in a parent element
            if 2n, it will select every second element
    We can select even or odd elements, just including 'even' or 'odd' in the parenthesis

For documentation: https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes
*/



/* ----------------------------------- */

/* Universal selector */
/*  
* {
    color: black;
    background-color: cyan;
} 
*/

/* Element selector: body */
body {
    background-color: #f1faee;
}

/* Element selector: button */
button {
    font-size: 30px;
    background-color: #a8dadc;
}

/* List selector: h1 and h2 */
h1, h2 {
    color: #1d3557;
}

/* ID selector: #signup (Sign Up button) */
#signup {
    background-color: #1d3557;
    color: #f1faee;
}

/* Element selector: span */
span {
    color: #457b9d;
}

/* Class selector: .tag - select all elements with the class tag */
.tag {
    color: #f1faee;
    background-color: #e63946;
    font-size: 16px;
}

/* Descendant selector: .post a
selects all <a> elements inside the .post class */
.post a {
    color: #457b9d;
    font-weight: bold;
    text-decoration: none;
}
/* Descendant selector: .footer a
selects all <a> elements inside the .footer class */
footer a {
    color: #e63946;
}

/* Adjacent selector: input + button 
selects the button that is placed immediately after an input element */
input + button {
    background-color: pink;
}
/* select the button that is placed immediately after an h2 element */
h2 + button {
    font-size: 15px;
}

/* Direct child selector: footer > a */
/* selects all <a> elements that are DIRECT children of a <footer> element */
footer > a {
    color: #1d3557;
}

/* Attribute selector: input[type="password"] */
/* selects all <input> elements with a type attribute equal to "password" */
input[type="password"] {
    /* Now when we type in the password field, the text will be with a different color */
    color: #7e2776;
}
/* Attribute selector over a class */
/* selects all elements with a class attribute equal to "post" */
/* It would be easier to use the class selector: .post 
   Another way would have been section.post */
section[class="post"] {
    background-color: #f1faee;
}
/* selects all elements with a href attribute containing "google" */
a[href*="google"] {
    color: #457b9d;
}

/* Pseudo-class selector*/

/* :hover */
/*button:hover */
/* change the colors of the button (that is inside the .post class) when you hover over it */
.post button:hover {
    background-color: #e63946;
    color: #f1faee;
}
/* change the text decoration of the links when you hover over them */
.psot a:hover {
    text-decoration: underline;
}

/* :active */
/* change the colors of the button (that is inside the .post class) when you click on it */
.post button:active {
    background-color: #457b9d;
    color: #f1faee;
}

/* :nth-of-type() */
/* selects the third .post class and changes its background color */
/* 3 - selects the third element
   3n - selects every third element */
.post:nth-of-type(3n) {
    background-color: #dfe8dc;
}